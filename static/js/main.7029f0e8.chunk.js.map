{"version":3,"sources":["components/lib.tsx","auth-provider.ts","utils/http.ts","utils/index.ts","utils/use-async.ts","context/auth-context.tsx","utils/user.ts","components/id-select.tsx","components/user-select.tsx","screens/project-list/search-panel.tsx","components/pin.tsx","utils/reorder.ts","utils/use-optimistic-options.ts","utils/project.ts","utils/url.ts","screens/project-list/util.ts","screens/project-list/list.tsx","screens/project-list/index.tsx","utils/task.ts","screens/kanban/util.ts","utils/tasks.ts","screens/epic/util.ts","screens/epic/create-epic.tsx","utils/epic.ts","screens/epic/index.tsx","components/drag-and-drop.tsx","utils/kanban.ts","utils/task-type.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","components/mark.tsx","screens/kanban/kanban-column.tsx","screens/kanban/create-kanban.tsx","components/task-type-select.tsx","screens/kanban/search-panel.tsx","screens/kanban/task-model.tsx","screens/kanban/index.tsx","screens/project/index.tsx","assets/software-logo.svg","screens/project-list/project-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","authenticated-app.tsx","unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx","components/error-boundary.tsx","App.tsx","context/index.tsx","index.tsx"],"names":["Row","styled","div","props","between","undefined","marginBottom","gap","FullPage","FullPageLoading","size","FullPageErrorFallback","error","ErrorBox","value","message","Text","type","ButtonNoPadding","ScreenContainer","localStorageKey","apiUrl","process","handleUserResponse","user","window","localStorage","setItem","token","logout","a","removeItem","http","endpoint","data","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","location","reload","Promise","reject","json","ok","useHttp","useAuth","useCallback","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","React","useRef","document","current","resetRoute","href","origin","defaultInitialState","stat","defaultConfig","throwOnError","useSafeDispatch","dispatch","mountedRef","useMountedRef","useAsync","initialState","initialConfig","useReducer","state","action","retry","setRetry","safeDispatch","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","bootstrapUser","getItem","AuthContext","createContext","displayName","AuthProvider","callback","children","setUser","queryClient","useQueryClient","Provider","login","form","register","clear","context","useContext","useUsers","param","client","useQuery","IdSelect","onChange","defaultOptionName","options","restProps","length","toNumber","Option","map","option","id","name","isNaN","Number","UserSelect","users","SearchPanel","setParam","css","layout","Item","placeholder","evt","target","personId","Pin","checked","onCheckedChange","count","num","reorder","fromId","referenceId","list","copiedList","movingItemIndex","findIndex","item","insertAfter","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf","useConfig","queryKey","onSuccess","invalidateQueries","onMutate","previousItems","getQueryData","setQueryData","old","onError","newItem","useDeleteConfig","filter","useEditConfig","useAddConfig","useProjects","useEditProject","useMutation","params","useAddProject","useProject","enabled","useUrlQueryParam","keys","useSearchParams","searchParams","setSearchParam","useSetUrlSearchParam","useMemo","reduce","prev","key","get","setSearchParams","o","object","result","Object","forEach","clearnObject","fromEntries","useProjectsSearchParams","useProjectsQueryKey","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","setUrlParams","editingProject","projectModalOpen","Boolean","open","close","startEdit","More","project","deleteProject","useDeleteProject","mutate","overlay","onClick","confirm","content","okText","onOk","confirmDeleteProject","List","pagination","rowKey","columns","disabled","render","pin","sorter","b","localeCompare","String","dataIndex","find","created","dayjs","format","Container","ProjectListScrren","loading","dataSource","useReorderTask","kanbanId","toKanbanId","useReorderTaskConfig","useProjectIdInUrl","useLocation","pathname","match","useProjectInUrl","useKanbanSearchParams","projectId","useKanbansQueryKey","useTasksSearchParams","debouncedName","typeId","processorId","tagId","useTasksQueryKey","useTaskModel","editingTaskId","setEditingTaskId","useTask","editingTask","useTasks","useEpicSearchParams","useEpicsQueryKey","CreateEpic","useAddEpic","addEpic","useForm","onFinish","values","onClose","resetFields","visible","forceRender","destroyOnClose","width","style","label","rules","required","textAlign","htmlType","EpicScreen","currentProject","epics","useEpics","tasks","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","overflow","itemLayout","renderItem","epic","Meta","description","start","end","task","epicId","Drop","provided","isValidElement","cloneElement","droppableProps","ref","innerRef","DropChild","forwardRef","Drag","draggableProps","dragHandleProps","useKanbans","useReorderKanban","useReorderKanbanConfig","useTaskTypes","CreateTask","setName","addTask","useAddTask","mutateAsync","inputMode","setInputMode","submit","toggle","mode","onBlur","autoFocus","onPressEnter","Mark","keyword","arr","split","str","index","color","TaskTypeIcon","taskTypes","alt","src","taskIcon","bugIcon","TaskCard","cursor","KanbanColumn","kanban","allTasks","TaskContainer","direction","droppableId","minHeight","draggableId","useDeletKanban","cancelText","CreateKanban","addKanban","useAddKanban","TaskTypeSelect","labelCol","span","wrapperCol","TaskModal","useEditTask","editTask","editLoading","deleteTask","useDeleteTask","getFieldsValue","setFieldsValue","onCancel","confirmLoading","initialValues","fontSize","KanbanScreen","kanbans","kanbanIsLoading","onDragEnd","useDragEnd","ColumnsContainer","display","reorderKanban","reorderTask","source","destination","toId","fromKanbanId","fromTask","toTask","ProjectScreen","routeType","units","useRouteType","Aside","selectedKeys","Main","path","element","replace","aside","_extends","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","SvgSoftwareLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","className","ForwardRef","ProjectModal","mutateLoading","ProjectPopover","projects","refetch","pinnedProjects","ContentContainer","destroyTooltipOnHide","onVisibleChange","placement","UserPopover","AuthenticatedApp","PageHeader","Header","HeaderLeft","padding","HeaderRight","User","e","preventDefault","main","LoginScreen","handleSubmit","LongButton","RegisterScreen","cpassword","password","UnauthenticatedApp","isRegister","setIsRegister","Background","ShadowCard","Title","Button","h2","left","right","header","logo","Card","ErrorBoundary","fallbackRender","Component","App","AppProviders","QueryClientProvider","QueryClient","loadServer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7029f0e8.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport { Button, Spin, Typography } from \"antd\";\nimport { DevTools } from \"jira-dev-tool\";\nimport React from \"react\";\n\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size=\"large\" />\n  </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <DevTools />\n    <ErrorBox error={error} />\n  </FullPage>\n);\n\n//类型守卫 如果返回值是true则value is Error\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>;\n  }\n  return null;\n};\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","// 在真实环境中,如果使用firebase这种第三方auth服务的话，本文将不需要开发者开发\n\nimport { User } from \"types/user\";\n\n//存token\nconst localStorageKey = \"__auth_provider_token__\";\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\n//因为后台返回回来的是一定是个对象里面有属性{ user,等等属性 }所以这里只需要user\n//这个函数功能是把login或register后返回回来的user.token保存到localstorage\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\n\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response: Response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\n//移除key\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","import qs from \"qs\";\nimport * as auth from \"auth-provider\";\nimport { useAuth } from \"context/auth-context\";\nimport { useCallback } from \"react\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Config extends RequestInit {\n  data?: object;\n  token?: string;\n}\n\nexport const http = async (\n  endpoint: string,\n  { data, token, headers, ...customConfig }: Config = {}\n) => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      //token标准的格式\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    //customConfig里可以让使用者传method覆盖这个'GET'\n    ...customConfig,\n  };\n  if (config.method?.toUpperCase() === \"GET\") {\n    endpoint += `?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n  return window\n    .fetch(`${apiUrl}/${endpoint}`, config)\n    .then(async (response) => {\n      //未登录或token失效\n      if (response.status === 401) {\n        await auth.logout();\n        window.location.reload();\n        return Promise.reject({ message: \"请重新登录\" });\n      }\n      const data = await response.json();\n      if (response.ok) {\n        return data;\n      } else {\n        return Promise.reject(data);\n      }\n    });\n};\n\n//使用了hook,useAuth 意味着这也是一个hook,他不能 useHttp(url)这样去调用,这违反了hook的链表结构\n//所以我们必须return一个function  而return function 当然用useCallback包装啦\nexport const useHttp = () => {\n  const { user } = useAuth();\n  return useCallback(\n    (...[endpoint, config]: Parameters<typeof http>) =>\n      http(endpoint, { ...config, token: user?.token }),\n\n    [user?.token]\n  );\n};\n","import React, { useRef } from \"react\";\nimport { useEffect, useState } from \"react\";\n\n//单独处理0  null undefined会被 !value排除\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\n\nexport const isVoid = (value: unknown) =>\n  value === undefined || value === null || value === \"\";\n\n//在一个函数里,改变传入的对象本身是不好的\n//object在typescript里很广泛 function都是object 所以要写成这样才是键值对的object\nexport const clearnObject = (object: { [key: string]: unknown }) => {\n  const result = { ...object };\n  Object.keys(object).forEach((key) => {\n    const value = object[key];\n    //注意不能写成!value因为value为0也会被删掉,显然不能删,注意这是个坑\n    if (isVoid(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\nexport const useMount = (callback: () => void) => {\n  useEffect(callback, []);\n};\n\n//useDebounce作用是防抖保存value更新后的值\n//注意value需要是一个useState创建的state,这样他的改变才能触发重新渲染才能触发effect调用\nexport const useDebounce = <V>(value: V, delay?: number): V => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useArray = <T>(initialArray: T[]) => {\n  const [value, setValue] = useState(initialArray);\n  const clear = () => {\n    setValue([]);\n  };\n  const removeIndex = (index: number) => {\n    let nArr = [...value];\n    nArr.splice(index, 1);\n    setValue(nArr);\n  };\n  const add = (item: T) => {\n    setValue([...value, item]);\n  };\n\n  return {\n    value,\n    setValue,\n    clear,\n    removeIndex,\n    add,\n  };\n};\n\nexport const useDocumentTitle = (\n  title: string,\n  keepOnUnmount: boolean = true\n) => {\n  //页面加载时: oldTitle = 旧title 'React App'\n  //加载后: oldTitle = 新title\n\n  // //闭包写法\n  // const oldTitle = document.title;\n  //上面写法每次页面更新 oldTitle都会更新\n  //下面ref写法,document.title是个string,将会把这个string转换成ref对象,他的.current永远是原来的document.title\n  const oldTitle = React.useRef(document.title).current;\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    //页面被卸载的时候调用\n    return () => {\n      if (!keepOnUnmount) {\n        //如果不指定依赖,读到的就是旧title`\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n\n  // //闭包写法可读性不好,别人容易看不懂\n  // useEffect(() => {\n  //   //页面被卸载的时候调用\n  //   return () => {\n  //     if (!keepOnUnmount) {\n  //       //如果不指定依赖,读到的就是旧title\n  //       document.title = oldTitle;\n  //     }\n  //   };\n  // }, []);\n};\n\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * 返回组件的挂载状态,如果还没挂载或者已经卸载返回false,反之返回true\n */\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n};\n","import { useCallback, useReducer, useState } from \"react\";\nimport { useMountedRef } from \"utils\";\n\n//D是data的类型\ninterface State<D> {\n  error: Error | null;\n  data: D | null;\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\n}\n\nconst defaultInitialState: State<null> = {\n  stat: \"idle\",\n  data: null,\n  error: null,\n};\n\nconst defaultConfig = {\n  throwOnError: false,\n};\n\n//防止组件unmount了却调用了dispatch\n//比如list正在请求,立刻退出账户  此时list返回回来了,但是组件已经unmount了,fiber都没了fiber.hook当然也不存在了\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  //mountRef可以知道组件是否mount\n  const mountedRef = useMountedRef();\n  return useCallback(\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\n    [mountedRef, dispatch]\n  );\n};\n\n//处理异步请求的 Error和Loading问题\nexport const useAsync = <D>(\n  initialState?: State<D>,\n  initialConfig?: typeof defaultConfig\n) => {\n  const config = { ...defaultConfig, ...initialConfig };\n  const [state, dispatch] = useReducer(\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\n    {\n      ...defaultInitialState,\n      ...initialState,\n    }\n  );\n  const [retry, setRetry] = useState(() => {\n    return () => {};\n  });\n  /**不能写成let retry = () => {}\n   * 因为react一直都有人触发重新渲染\n   * 当别人触发重新渲染，整个组件重新更新\n   * 这个retry就又被初始化成了空函数,而run一般是useEffect的deps改变才会触发\n   * 这样就丢失了保存的oldPromise了\n   */\n\n  const safeDispatch = useSafeDispatch(dispatch);\n\n  const setData = useCallback(\n    (data: D) =>\n      safeDispatch({\n        data,\n        stat: \"success\",\n        error: null,\n      }),\n    [safeDispatch]\n  );\n\n  const setError = useCallback(\n    (error: Error) =>\n      safeDispatch({\n        error,\n        stat: \"error\",\n        data: null,\n      }),\n    [safeDispatch]\n  );\n\n  //用来触发异步请求,更新state\n  //传入一个Promise会把promise返回的data保存在data里\n  const run = useCallback(\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\n      if (!promise || !promise.then) {\n        throw new Error(\"请传入Promise类型数据\");\n      }\n      setRetry(() => () => {\n        if (runConfig?.retry) run(runConfig?.retry(), runConfig);\n      });\n      // state会出现在deps里,而dispatch改变state导致无限循环,我们可以用函数dispatch解决\n      // dispatch({ ...state, stat: \"loading\" });\n      safeDispatch({ stat: \"loading\" });\n      return (\n        promise\n          .then((data) => {\n            //组件还在,没被卸载,才去修改state  不然state都已经被卸载掉了去修改state会报错\n            setData(data);\n            return data;\n          })\n          //catch会消化异常,如果不主动抛出,外面会接受不到异常\n          .catch((error) => {\n            setError(error);\n            //默认不抛出,即外面不用写catch\n            if (config.throwOnError) return Promise.reject(error);\n            return error;\n          })\n      );\n    },\n    [config.throwOnError, setData, setError, safeDispatch]\n  );\n\n  return {\n    isIdle: state.stat === \"idle\",\n    isLoading: state.stat === \"loading\",\n    isError: state.stat === \"error\",\n    isSuccess: state.stat === \"success\",\n    run,\n    setData,\n    //retry被调用时重新跑一遍run,让state刷新一遍\n    retry,\n    setError,\n    ...state,\n  };\n};\n","import React, { ReactNode, useState } from \"react\";\nimport * as auth from \"auth-provider\";\nimport { User } from \"types/user\";\nimport { http } from \"utils/http\";\nimport { useMount } from \"utils\";\nimport { useAsync } from \"utils/use-async\";\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\nimport { useQueryClient } from \"react-query\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\n//mount之后做身份验证,如果通过,把服务器返回回来的user返回出去\nconst bootstrapUser = async () => {\n  let user = null;\n  //取出localstorage里的token\n  const token = auth.getToken();\n  if (token) {\n    //发请求给后台看看这个token对不对\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\n//Authcontext保存user状态和对user的操作方法\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      register: (form: AuthForm) => Promise<void>;\n      login: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    data: user,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const queryClient = useQueryClient();\n\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      //缓存清一下,防止换号还用上一个人的缓存\n      queryClient.clear();\n    });\n  /*\n   相当于 Provider里面的是会被渲染出来的，react应该在内部return了类似 <>{children}</>\n   <AuthContext.Provider>\n    {children}\n   </AuthContext.Provider>\n  */\n\n  useMount(() => {\n    //判断localstorage里的token是否有效，有效就让data绑定上user\n    run(bootstrapUser());\n  });\n\n  if (isIdle || isLoading) {\n    return <FullPageLoading />;\n  }\n\n  //用户没登录成功不一定是token过期，有可能是服务器炸了,所以显示一下error比较好\n  if (isError) {\n    return <FullPageErrorFallback error={error} />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n","import { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { User } from \"types/user\";\nimport { clearnObject } from \"utils\";\nimport { useHttp } from \"./http\";\nimport { useAsync } from \"./use-async\";\n\n//和project同理\n\nexport const useUsers = (param?: Partial<User>) => {\n  const client = useHttp();\n\n  return useQuery<User[]>([\"projects\", param], () =>\n    client(\"users\", { data: param })\n  );\n};\n","import { Select } from \"antd\";\nimport React from \"react\";\nimport { Raw } from \"types\";\n\ntype SelectProps = React.ComponentProps<typeof Select>;\n\ninterface IdSelectProps\n  extends Omit<SelectProps, \"value\" | \"onChange\" | \"options\"> {\n  value?: Raw | null | undefined;\n  onChange?: (value?: number) => void;\n  defaultOptionName?: string;\n  //id就是Option.value的类型,这是服务端决定的\n  options?: { name: string; id: number }[];\n}\n\n/**\n * value可以传入多种类型的值\n * 我们自己定义的onChange也就是用户可以使用的回调,只会给他传入number|undefined 类型\n * Select自带onChange则会传入多种类型,这就需要我们手动过滤一下了\n * 当isNaN(Number(value))为true,选择默认类型\n * 选择默认类型,onChange回调undefined\n * @param props\n */\nexport const IdSelect = (props: IdSelectProps) => {\n  const { value, onChange, defaultOptionName, options, ...restProps } = props;\n  return (\n    <Select\n      {...restProps}\n      //外面传进来的value是unknown,自己改成number与Option里的value一致(服务端决定的Option)\n      value={options?.length ? toNumber(value) : 0}\n      //这里传进来的value是下面Option的value类型,也就是unknown\n      //给外面传过去的value要对这个unknown进行改造,改造成number||undefined(0的情况)\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\n    >\n      {defaultOptionName ? (\n        //Option里的value始终保持是number类型\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\n      ) : null}\n      {options?.map((option) => (\n        <Select.Option value={option.id} key={option.id}>\n          {option.name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value));\n","import React from \"react\";\nimport { useUsers } from \"utils/user\";\nimport { IdSelect } from \"./id-select\";\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: users } = useUsers();\n  return <IdSelect options={users || []} {...props} />;\n};\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport { UserSelect } from \"components/user-select\";\nimport React from \"react\";\nimport { Project } from \"../../types/project\";\nimport { User } from \"../../types/user\";\n\ninterface SearchPanelProps {\n  users: User[];\n  param: Partial<Pick<Project, \"name\" | \"personId\">>;\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\n}\n\nconst SearchPanel = ({ param, setParam, users }: SearchPanelProps) => {\n  return (\n    //引入了emotion的css必须在文件开头指定jsx\n    <Form css={{ marginBottom: \"2rem\" }} layout={\"inline\"}>\n      <Form.Item>\n        <Input\n          placeholder={\"项目名\"}\n          type=\"text\"\n          // 受控组件写法\n          value={param.name}\n          onChange={(evt) =>\n            setParam({\n              name: evt.target.value,\n            })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        {/* 当Option value和Select value相同时被选中 \n          不管你setParam是什么类型,他通过searchParams.get得到的一定是string\n          因为user.id是number类型\n          所以后面点击 Select=string  Option=number\n          永远匹配不到了,匹配不到Option则显示Select value\n        */}\n        <UserSelect\n          //UserSelect已经保证了这个value最终传给Select会是一个number\n          value={param.personId}\n          //UserSelect已经保证了这个value一定是个number||undefined(选defalut的情况)\n          //为什么是undefined的呢,因为undefined的情况personId就会在urlParam被过滤\n          //因为setParam对传入的props进行了clearnObject\n          onChange={(value) =>\n            setParam({\n              ...param,\n              personId: value,\n            })\n          }\n          defaultOptionName=\"负责人\"\n        />\n      </Form.Item>\n    </Form>\n  );\n};\nexport default SearchPanel;\n","import { Rate } from \"antd\";\nimport React from \"react\";\n\ninterface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nexport const Pin = (props: PinProps) => {\n  const { checked, onCheckedChange, ...restProps } = props;\n  //count是星总的个数\n  //value是亮的个数\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(num) => onCheckedChange?.(!!num)}\n      {...restProps}\n    />\n  );\n};\n","/**\n * 在本地对排序进行乐观更新\n * @param fromId 要排序的项目的id\n * @param type 'before' | 'after'\n * @param referenceId 参照id\n * @param list 要排序的列表, 比如tasks, kanbans\n */\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n","import { QueryKey, useQueryClient } from \"react-query\";\nimport { Task } from \"types/task\";\nimport { reorder } from \"./reorder\";\n\n//用来生成useMutation后面的那个对象做乐观更新\nexport const useConfig = (\n  queryKey: QueryKey,\n  callback: (target: any, old?: any[]) => any[]\n) => {\n  const queryClient = useQueryClient();\n  return {\n    //需要在修改数据完后手动触发渲染 这里queryClient让projects无效重新请求projects并渲染\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    //乐观更新Optimistic Updates   在Mutate发生的时候直接把缓存的数据改了\n    async onMutate(target: any) {\n      //从key里拿到缓存的数据\n      const previousItems = queryClient.getQueryData(queryKey);\n      //设置这个key对应缓存  可能是undefined 所以要判断\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\n        //return值作为缓存值\n        return callback(target, old);\n      });\n      //返回的会到context对象里\n      return { previousItems };\n    },\n    //在Mutate发生异常的时候调用  回滚机制\n    onError(error: any, newItem: any, context: any) {\n      queryClient.setQueryData(queryKey, context.previousItems);\n    },\n  };\n};\n\nexport const useDeleteConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\n  );\nexport const useEditConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.id === target.id ? { ...item, ...target } : item\n      ) || []\n  );\nexport const useAddConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []));\n\nexport const useReorderKanbanConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => reorder({ list: old, ...target }));\n\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => {\n    //乐观更新task序列中位置\n    const orderdList = reorder({ list: old, ...target }) as Task[];\n    //由于task可能设计跨kanban,所以不要忘记改变kanbanid\n    //注意old是当前所有看板的所有task的数组,所以可以直接这么改 返回的也是这么个玩意儿\n    return orderdList.map((item) =>\n      item.id === target.fromId\n        ? { ...item, kanbanId: target.toKanbanId }\n        : item\n    );\n  });\n","import { QueryKey, useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { useProjectsSearchParams } from \"screens/project-list/util\";\nimport { useHttp } from \"utils/http\";\nimport { Project } from \"../types/project\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n} from \"./use-optimistic-options\";\n\n//就实现了直接调用这个就能异步获取到projects列表\n//并且具有error和loading判断\n//param改变一次调用一次\n//更加抽象了\nexport const useProjects = (param?: Partial<Project>) => {\n  const client = useHttp();\n\n  //param改变则重新触发useQuery请求数据并重新渲染\n  //<returnDataType,errorType>\n  //useQuery返回{data,isLoading,error}\n  return useQuery<Project[]>([\"projects\", param], () =>\n    client(\"projects\", { data: param })\n  );\n};\n\n//project数据部分更新\nexport const useEditProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  //修改数据用useMutation,注意useMutation不会触发重新渲染\n  //useMutation返回一个对象{mutate,mutateAsync, error, isLoading: mutateLoading}\n  //调用mutate就是下面这个函数\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects/${params.id}`, {\n        data: params,\n        method: \"PATCH\",\n      }),\n    useEditConfig(queryKey)\n  );\n};\n\n//添加project\nexport const useAddProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`projects/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\n//获取project详情\nexport const useProject = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Project>(\n    [\"project\", { id }],\n    () => client(`projects/${id}`),\n    {\n      //id有值的时候才触发上面函数  undefined这种不触发\n      enabled: !!id,\n    }\n  );\n};\n","import { useMemo } from \"react\";\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\nimport { clearnObject } from \"utils\";\n\n// 返回url中指定键的参数值 以及修改他的函数\n// [{} , ()=>{}]\n//注意这是来自react-router-dom的方法，必须在BrowserRouter或HashRouter下使用\n//因为他也是用context实现的BrowserRouter相当于Provider\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\n  //返回一个URLSearchParams  这个对象不能直接获取属性,必须用get,has这种函数\n  const [searchParams] = useSearchParams();\n  const setSearchParam = useSetUrlSearchParam();\n\n  return [\n    //只有searchParams改变的时候改变param\n    useMemo(\n      () =>\n        keys.reduce((prev, key) => {\n          return { ...prev, [key]: searchParams.get(key) || \"\" };\n        }, {} as { [key in K]: string }),\n      //searchParams keys是hook的,会进行复用,所以可以传\n      [searchParams, keys]\n    ),\n    //ts约束用了useUrlQueryParam的只能改SearchParams当时传入的keys的key\n    (params: Partial<{ [key in K]: unknown }>) => {\n      return setSearchParam(params);\n    },\n  ] as const;\n};\n\n//而这个能改SearchParams所有key\nexport const useSetUrlSearchParam = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return (params: { [key in string]: unknown }) => {\n    //Object.fromEntries把map或键值对列表返回成对象\n    //...Object.fromEntries(searchParams)这样就可以兼容setParams({某个属性的修改}),外面就不用每次传整个完整的Params了\n    const o = clearnObject({\n      ...Object.fromEntries(searchParams),\n      ...params,\n    }) as URLSearchParamsInit;\n    return setSearchParams(o);\n  };\n};\n","import { useMemo, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useProject } from \"utils/project\";\nimport { useSetUrlSearchParam, useUrlQueryParam } from \"utils/url\";\n\n//项目列表搜索的参数\nexport const useProjectsSearchParams = () => {\n  const [keys] = useState<(\"name\" | \"personId\")[]>([\"name\", \"personId\"]);\n  const [param, setParam] = useUrlQueryParam(keys);\n\n  return [\n    //{name:,personId?} name必须存在name=''也有意义表示搜索所有 而personId=''请求的时候不用带上\n    useMemo(\n      () => ({ ...param, personId: Number(param.personId) || undefined }),\n      [param]\n    ),\n    setParam,\n  ] as const;\n};\n\nexport const useProjectsQueryKey = () => {\n  const [params] = useProjectsSearchParams();\n  return [\"projects\", params];\n};\n\nexport const useProjectModal = () => {\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\n    \"projectCreate\",\n  ]);\n  //同步获取url中editingProjectId(正在编辑的详情Id)\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\n    \"editingProjectId\",\n  ]);\n  const setUrlParams = useSetUrlSearchParam();\n\n  //异步请求获得editingProjectId对应数据内容\n  const { data: editingProject, isLoading } = useProject(\n    Number(editingProjectId)\n  );\n\n  const open = () => {\n    setProjectCreate({ projectCreate: true });\n  };\n  //undefined这样就可以让false的时候不在url显示\n  const close = () => {\n    //react的state不是立刻更新的上面这样会出错\n    // setProjectCreate({ projectCreate: undefined })\n    // setEditingProjectId({editingProjectId:undefined})\n    //这样就好了 一起修改\n    setUrlParams({ projectCreate: \"\", editingProjectId: \"\" });\n  };\n\n  //改变url中editingProjectId\n  const startEdit = (id: number) =>\n    setEditingProjectId({ editingProjectId: id });\n\n  return {\n    projectModalOpen: projectCreate === \"true\" || Boolean(editingProjectId),\n    open,\n    close,\n    startEdit,\n    editingProject,\n    isLoading,\n  };\n};\n","import { Dropdown, Menu, Modal } from \"antd\";\nimport Table, { TableProps } from \"antd/lib/table\";\nimport { ButtonNoPadding } from \"components/lib\";\nimport { Pin } from \"components/pin\";\nimport dayjs from \"dayjs\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDeleteProject, useEditProject } from \"utils/project\";\nimport { Project } from \"../../types/project\";\nimport { User } from \"../../types/user\";\nimport { useProjectModal, useProjectsQueryKey } from \"./util\";\n\n//TableProps传入一个泛型RecordType也就是dataSource的类型\n//TableProps自带了Table上所有的属性?\ninterface ListProps extends TableProps<Project> {\n  users: User[];\n}\n\n//用TableProps配合这里的props能完成属性透传\n//Table里直接 {...props}就可以了\nconst List = ({ users, ...props }: ListProps) => {\n  //不能在这种事件触发和if语句等调用hook,所以我们只能用effect返回出一个方法来调用\n  const { mutate } = useEditProject(useProjectsQueryKey());\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\n\n  return (\n    <Table\n      pagination={false}\n      // 别忘了rowKey\n      //在 Table 中，dataSource 和 columns 里的数据值都需要指定 key 值。\n      //如果 dataSource[i].key 没有提供，你应该使用 rowKey 来指定 dataSource 的主键\n      rowKey=\"id\"\n      columns={[\n        {\n          title: <Pin checked={true} disabled={true} />,\n          render(value, project) {\n            //星星亮不亮是后台pin属性决定,所以onChange要触发请求操作数据库\n            //不能在这种事件触发和if语句等调用hook,所以我们只能用effect返回出一个方法来调用\n            //id是形成dom的时候就知道的,pin是要等服务器返回的 可以用柯里化来区分 这是一种编程风格\n            return (\n              <Pin\n                checked={project.pin}\n                onCheckedChange={pinProject(project.id)}\n              />\n            );\n          },\n        },\n        {\n          title: \"名称\",\n          sorter: (a, b) => a.name.localeCompare(b.name),\n          render(value, project) {\n            return <Link to={String(project.id)}>{project.name}</Link>;\n          },\n        },\n        {\n          title: \"部门\",\n          dataIndex: \"organization\",\n          key: \"organization\",\n        },\n        {\n          title: \"负责人\",\n          render(value, project) {\n            return (\n              <span>\n                {users.find((user) => user.id === project.personId)?.name ||\n                  \"未知\"}\n              </span>\n            );\n          },\n        },\n        {\n          title: \"创建时间\",\n          render(value, project) {\n            return (\n              <span>\n                {project.created\n                  ? dayjs(project.created).format(\"YYYY-MM-DD\")\n                  : \"无\"}\n              </span>\n            );\n          },\n        },\n        {\n          render(value, project) {\n            return <More project={project} />;\n          },\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n\nconst More = ({ project }: { project: Project }) => {\n  const { startEdit } = useProjectModal();\n  const editProject = (id: number) => () => startEdit(id);\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\n  const confirmDeleteProject = (id: number) => {\n    Modal.confirm({\n      title: \"确定删除这个项目吗?\",\n      content: \"点击确定删除\",\n      okText: \"确定\",\n      onOk() {\n        deleteProject({ id });\n      },\n    });\n  };\n\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item onClick={editProject(project.id)} key={\"edit\"}>\n            编辑\n          </Menu.Item>\n          <Menu.Item\n            key={\"delete\"}\n            onClick={() => confirmDeleteProject(project.id)}\n          >\n            删除\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <ButtonNoPadding type={\"link\"}>...</ButtonNoPadding>\n    </Dropdown>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport SearchPanel from \"./search-panel\";\nimport List from \"./list\";\nimport { useDebounce, useDocumentTitle } from \"utils\";\n\nimport styled from \"@emotion/styled\";\n\nimport { useProjects } from \"../../utils/project\";\nimport { useUsers } from \"utils/user\";\nimport { useProjectModal, useProjectsSearchParams } from \"./util\";\nimport { ButtonNoPadding, ErrorBox, Row } from \"components/lib\";\n\nconst ProjectListScrren = () => {\n  useDocumentTitle(\"项目列表\", false);\n\n  //{name:,personId?} name必须存在,即使url里不存在param里的name=''也有意义表示搜索所有\n  //而personId=''就从param里删除 = undefined因为他没有意义\n  //发请求发的是这个param而不是完完全全的url里的值,因为url不存在name而发请求发name=\"\"表示获取全部\n  const [param, setParam] = useProjectsSearchParams();\n  const { isLoading, error, data: list } = useProjects(useDebounce(param, 500));\n  //解构赋值,把data赋值给users 返回的是负责人\n  const { data: users } = useUsers();\n\n  const { open } = useProjectModal();\n\n  return (\n    <Container>\n      <Row between={true}>\n        <h1>项目列表</h1>\n        <ButtonNoPadding type={\"link\"} onClick={open}>\n          创建项目\n        </ButtonNoPadding>\n      </Row>\n      <SearchPanel param={param} setParam={setParam} users={users || []} />\n      <ErrorBox error={error} />\n\n      <List loading={isLoading} dataSource={list || []} users={users || []} />\n    </Container>\n  );\n};\n\n// ProjectListScrren.whyDidYouRender = true\n\nconst Container = styled.div`\n  padding: 3.2rem;\n  /* 父亲开了flex  子元素变成由内容撑开宽度,所以要设置flex:1膨胀到最大 */\n  flex: 1;\n`;\n\nexport default ProjectListScrren;\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Task } from \"types/task\";\nimport { useHttp } from \"utils/http\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n  useReorderTaskConfig,\n} from \"utils/use-optimistic-options\";\nimport { SortProps } from \"./kanban\";\n\nexport const useAddTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\n//获取project详情\nexport const useTask = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Task>([\"task\", { id }], () => client(`tasks/${id}`), {\n    //id有值的时候才触发上面函数  undefined这种不触发\n    enabled: !!id,\n  });\n};\n\nexport const useEditTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  //修改数据用useMutation,注意useMutation不会触发重新渲染\n  //useMutation返回一个对象{mutate,mutateAsync, error, isLoading: mutateLoading}\n  //调用mutate就是下面这个函数\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks/${params.id}`, {\n        data: params,\n        method: \"PATCH\",\n      }),\n    useEditConfig(queryKey)\n  );\n};\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`tasks/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"tasks/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderTaskConfig(queryKey));\n};\n","import { useCallback, useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useDebounce } from \"utils\";\nimport { useProject } from \"utils/project\";\nimport { useTask } from \"utils/task\";\nimport { useUrlQueryParam } from \"utils/url\";\n\n//获取url中projectId\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return Number(id);\n};\n\n//根据url里的projectId获取数据\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\n\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() });\n\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbanSearchParams()];\n\nexport const useTasksSearchParams = () => {\n  const [param, setParam] = useUrlQueryParam([\n    \"name\",\n    \"typeId\",\n    \"processorId\",\n    \"tagId\",\n  ]);\n  const projectId = useProjectIdInUrl();\n  //请求发出的变成根据debouncedName来管理\n  const debouncedName = useDebounce(param.name, 200);\n\n  return useMemo(\n    () => ({\n      projectId,\n      typeId: Number(param.typeId) || undefined,\n      processorId: Number(param.processorId) || undefined,\n      tagId: Number(param.tagId) || undefined,\n      name: debouncedName,\n    }),\n    [projectId, param, debouncedName]\n  );\n};\n\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\n\nexport const useTaskModel = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\n    \"editingTaskId\",\n  ]);\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\n\n  const startEdit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: \"\" });\n  }, [setEditingTaskId]);\n\n  return {\n    editingTaskId,\n    editingTask,\n    startEdit,\n    close,\n    isLoading,\n  };\n};\n","import { useQuery } from \"react-query\";\nimport { Task } from \"types/task\";\nimport { useHttp } from \"./http\";\n\n//获取看板数据\nexport const useTasks = (param?: Partial<Task>) => {\n  const client = useHttp();\n\n  //param改变则重新触发useQuery请求数据并重新渲染\n  //<returnDataType,errorType>\n  //useQuery返回{data,isLoading,error}\n  return useQuery<Task[]>([\"tasks\", param], () =>\n    client(\"tasks\", { data: param })\n  );\n};\n","import { useProjectIdInUrl } from \"screens/kanban/util\";\n\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() });\n\nexport const useEpicsQueryKey = () => [\"epics\", useEpicSearchParams()];\n","import styled from \"@emotion/styled\";\nimport { Button, Drawer, DrawerProps, Form, Input, Spin } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { ErrorBox } from \"components/lib\";\nimport React, { useEffect } from \"react\";\nimport { useProjectIdInUrl } from \"screens/kanban/util\";\nimport { useAddEpic } from \"utils/epic\";\nimport { useEpicsQueryKey } from \"./util\";\n\nexport const CreateEpic = (\n  props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }\n) => {\n  const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQueryKey());\n  const [form] = useForm();\n  const projectId = useProjectIdInUrl();\n\n  const onFinish = async (values: any) => {\n    await addEpic({ ...values, projectId });\n    props.onClose();\n  };\n\n  useEffect(() => {\n    form.resetFields();\n  }, [form, props.visible]);\n\n  return (\n    <Drawer\n      visible={props.visible}\n      onClose={props.onClose}\n      forceRender={true}\n      destroyOnClose={true}\n      width={\"100%\"}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <>\n            <h1>创建任务组</h1>\n            <ErrorBox error={error} />\n            <Form\n              form={form}\n              layout={\"vertical\"}\n              style={{ width: \"40rem\" }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={\"名称\"}\n                name={\"name\"}\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入任务组名\",\n                  },\n                ]}\n              >\n                <Input placeholder={\"请输入任务组名称\"} />\n              </Form.Item>\n\n              <Form.Item style={{ textAlign: \"right\" }}>\n                <Button\n                  loading={isLoading}\n                  type={\"primary\"}\n                  htmlType={\"submit\"}\n                >\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </Container>\n    </Drawer>\n  );\n};\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Epic } from \"types/epic\";\nimport { useHttp } from \"./http\";\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\n\n//获取看板数据 每次获取数据都要传Partial<数据类型> 因为是根据这玩意儿在数据库找的对应数据呀\nexport const useEpics = (param?: Partial<Epic>) => {\n  const client = useHttp();\n\n  //param改变则重新触发useQuery请求数据并重新渲染\n  //<returnDataType,errorType>\n  //useQuery返回{data,isLoading,error}\n  return useQuery<Epic[]>([\"epics\", param], () =>\n    client(\"epics\", { data: param })\n  );\n};\n\nexport const useAddEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Epic>) =>\n      client(`epics`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`epics/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n","import { Button, List } from \"antd\";\nimport { Row, ScreenContainer } from \"components/lib\";\nimport dayjs from \"dayjs\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useProjectInUrl } from \"screens/kanban/util\";\nimport { useDeleteEpic, useEpics } from \"utils/epic\";\nimport { useTasks } from \"utils/tasks\";\nimport { CreateEpic } from \"./create-epic\";\nimport { useEpicSearchParams, useEpicsQueryKey } from \"./util\";\n\n//Epic在jira里相当于比Task更高一层的单元,其他地方可能不叫任务组\nexport const EpicScreen = () => {\n  const { data: currentProject } = useProjectInUrl();\n  const { data: epics } = useEpics(useEpicSearchParams());\n  const { data: tasks } = useTasks({ projectId: currentProject?.id });\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\n\n  return (\n    <ScreenContainer>\n      <Row between={true}>\n        <h1>{currentProject?.name}任务组</h1>\n        <Button onClick={() => setEpicCreateOpen(true)} type={\"link\"}>\n          创建任务组\n        </Button>\n      </Row>\n      <List\n        style={{ overflow: \"auto\" }}\n        dataSource={epics}\n        itemLayout={\"vertical\"}\n        renderItem={(epic) => (\n          <List.Item key={epic.id}>\n            <List.Item.Meta\n              title={\n                <Row between={true}>\n                  <span>{epic.name}</span>\n                  <Button\n                    type={\"link\"}\n                    onClick={() => deleteEpic({ id: epic.id })}\n                  >\n                    删除\n                  </Button>\n                </Row>\n              }\n              description={\n                <div>\n                  <div>开始时间:{dayjs(epic.start).format(\"YYYY-MM-DD\")}</div>\n                  bbb\n                  <div>结束时间:{dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\n                </div>\n              }\n            />\n\n            <div>\n              {tasks\n                ?.filter((task) => task.epicId === epic.id)\n                .map((task) => (\n                  <Link\n                    key={task.id}\n                    to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\n                  >\n                    {task.name}\n                  </Link>\n                ))}\n            </div>\n          </List.Item>\n        )}\n      />\n      <CreateEpic\n        onClose={() => setEpicCreateOpen(false)}\n        visible={epicCreateOpen}\n      />\n    </ScreenContainer>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport {\n  Droppable,\n  DroppableProps,\n  DroppableProvided,\n  DroppableProvidedProps,\n  DraggableProps,\n  Draggable,\n} from \"react-beautiful-dnd\";\n\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\n\n/*\n<Drop>\n  <div></div>\n</Drop>\n就是给div传入了ref:provied:innerRef,provided.droppableProps,provided\n*/\n//这里封装了Droppable每次要手动传的这几个props\nexport const Drop = ({ children, ...props }: DropProps) => {\n  //Droppable里需要是一个函数,这个函数返回Container,包含一个ref:provied:innerRef,provided.droppableProps\n  return (\n    <Droppable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            provided,\n          });\n        }\n        return <div />;\n      }}\n    </Droppable>\n  );\n};\n//接受provided的种种\ntype DropChildProps = Partial<\n  { provided: DroppableProvided } & DroppableProvidedProps\n> &\n  // 比如style id class等等\n  React.HtmlHTMLAttributes<HTMLDivElement>;\n// <返回的element的标签,props约束>\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\n  ({ children, ...props }, ref) => (\n    <div ref={ref} {...props}>\n      {children}\n      {/* api要求必须要加个placeholder */}\n      {props.provided?.placeholder}\n    </div>\n  )\n);\n\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\n\nexport const Drag = ({ children, ...props }: DragProps) => {\n  return (\n    <Draggable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            ref: provided.innerRef,\n          });\n        } else {\n          return <div />;\n        }\n      }}\n    </Draggable>\n  );\n};\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Kanban } from \"types/kanban\";\nimport { useHttp } from \"./http\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useReorderKanbanConfig,\n} from \"./use-optimistic-options\";\n\n//获取看板数据 每次获取数据都要传Partial<数据类型> 因为是根据这玩意儿在数据库找的对应数据呀\nexport const useKanbans = (param?: Partial<Kanban>) => {\n  const client = useHttp();\n\n  //param改变则重新触发useQuery请求数据并重新渲染\n  //<returnDataType,errorType>\n  //useQuery返回{data,isLoading,error}\n  return useQuery<Kanban[]>([\"kanbans\", param], () =>\n    client(\"kanbans\", { data: param })\n  );\n};\n\nexport const useAddKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Kanban>) =>\n      client(`kanbans`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeletKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`kanbans/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport interface SortProps {\n  //要重新排序的Item\n  fromId: number;\n  //目标Item\n  referenceId: number;\n  //目标Item的前还是后\n  type: \"before\" | \"after\";\n  fromKanbanId?: number;\n  toKanbanId?: number;\n}\n\nexport const useReorderKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"kanbans/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderKanbanConfig(queryKey));\n};\n","import { useQuery } from \"react-query\";\nimport { TaskType } from \"types/task-type\";\nimport { useHttp } from \"./http\";\n\n//获取看板数据\nexport const useTaskTypes = () => {\n  const client = useHttp();\n\n  //param改变则重新触发useQuery请求数据并重新渲染\n  //<returnDataType,errorType>\n  //useQuery返回{data,isLoading,error}\n  return useQuery<TaskType[]>([\"taskTypes\"], () => client(\"taskTypes\"));\n};\n","export default __webpack_public_path__ + \"static/media/task.8118694e.svg\";","export default __webpack_public_path__ + \"static/media/bug.61d2d6fe.svg\";","import { Card, Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAddTask } from \"utils/task\";\nimport { useProjectIdInUrl, useTasksQueryKey } from \"./util\";\n\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\n  const [name, setName] = useState(\"\");\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\n  const projectId = useProjectIdInUrl();\n  const [inputMode, setInputMode] = useState(false);\n\n  const submit = async () => {\n    await addTask({ projectId, name, kanbanId });\n    setInputMode(false);\n    setName(\"\");\n  };\n\n  const toggle = () => setInputMode((mode) => !mode);\n\n  useEffect(() => {\n    if (!inputMode) {\n      setName(\"\");\n    }\n  }, [inputMode]);\n\n  if (!inputMode) {\n    return <div onClick={toggle}>+创建事务</div>;\n  } else {\n    return (\n      <Card>\n        <Input\n          onBlur={toggle}\n          placeholder={\"需要做些什么\"}\n          autoFocus={true}\n          onPressEnter={submit}\n          value={name}\n          onChange={(evt) => setName(evt.target.value)}\n        />\n      </Card>\n    );\n  }\n};\n","import React from \"react\";\n\n// 'xxx关键字xxx关键字xxx'\n//split后['xxx','xxx','xxx']\n//可以发现是中间被split掉了,所以除了最后一个,其他的在后面加上有颜色的关键字就好了\nexport const Mark = ({ name, keyword }: { name: string; keyword: string }) => {\n  if (!keyword) {\n    return <>{name}</>;\n  } else {\n    const arr = name.split(keyword);\n    return (\n      <>\n        {arr.map((str, index) => (\n          <span key={index}>\n            {str}\n            {index === arr.length - 1 ? null : (\n              <span style={{ color: \"#257AFD\" }}>{keyword}</span>\n            )}\n          </span>\n        ))}\n      </>\n    );\n  }\n};\n","import React from \"react\";\nimport { Kanban } from \"types/kanban\";\nimport { useTaskTypes } from \"utils/task-type\";\nimport { useTasks } from \"utils/tasks\";\nimport { useKanbansQueryKey, useTaskModel, useTasksSearchParams } from \"./util\";\nimport taskIcon from \"assets/task.svg\";\nimport bugIcon from \"assets/bug.svg\";\nimport styled from \"@emotion/styled\";\nimport { Button, Card, Dropdown, Menu, Modal } from \"antd\";\nimport { CreateTask } from \"./create-task\";\nimport { Task } from \"types/task\";\nimport { Mark } from \"components/mark\";\nimport { useDeletKanban } from \"utils/kanban\";\nimport { Row } from \"components/lib\";\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\n\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n  const { data: taskTypes } = useTaskTypes();\n  const name = taskTypes?.find((taskTypes) => taskTypes.id === id)?.name;\n  if (!name) {\n    return null;\n  }\n  return <img alt=\"task-icon\" src={name === \"task\" ? taskIcon : bugIcon} />;\n};\nconst TaskCard = ({ task }: { task: Task }) => {\n  const { startEdit } = useTaskModel();\n  const { name: keyword } = useTasksSearchParams();\n\n  return (\n    <Card\n      onClick={() => startEdit(task.id)}\n      style={{ marginBottom: \"0.5rem\", cursor: \"pointer\" }}\n      key={task.id}\n    >\n      <p>\n        <Mark name={task.name} keyword={keyword} />\n      </p>\n      <TaskTypeIcon id={task.typeId} />\n    </Card>\n  );\n};\n\nexport const KanbanColumn = React.forwardRef<\n  HTMLDivElement,\n  { kanban: Kanban }\n>(({ kanban, ...props }, ref) => {\n  const { data: allTasks } = useTasks(useTasksSearchParams());\n\n  const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id);\n  return (\n    <Container ref={ref} {...props}>\n      <Row between={true}>\n        <h3>{kanban.name}</h3>\n        <More kanban={kanban} />\n      </Row>\n      <TaskContainer>\n        <Drop\n          type={\"ROW\"}\n          direction={\"vertical\"}\n          droppableId={String(kanban.id)}\n        >\n          {/* 如果没有minHeight 当没有task的时候内容区=0px 放不进去了 */}\n          <DropChild style={{ minHeight: \"5px\" }}>\n            {tasks?.map((task, index) => (\n              <Drag key={task.id} index={index} draggableId={\"task\" + task.id}>\n                {/* 这里应该去TaskCard转发Ref和kanban里做的一样,懒得写了 */}\n                <div>\n                  <TaskCard task={task} key={task.id} />\n                </div>\n              </Drag>\n            ))}\n          </DropChild>\n        </Drop>\n        <CreateTask kanbanId={kanban.id} />\n      </TaskContainer>\n    </Container>\n  );\n});\n\nconst More = ({ kanban }: { kanban: Kanban }) => {\n  const { mutateAsync } = useDeletKanban(useKanbansQueryKey());\n  const startEdit = () => {\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      title: \"确定删除看板吗\",\n      onOk() {\n        return mutateAsync({ id: kanban.id });\n      },\n    });\n  };\n\n  const overlay = (\n    <Menu>\n      <Menu.Item>\n        <Button type={\"link\"} onClick={startEdit}>\n          删除\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={overlay}>\n      <Button type={\"link\"}>...</Button>\n    </Dropdown>\n  );\n};\n\nexport const Container = styled.div`\n  min-width: 27rem;\n  border-radius: 6px;\n  background-color: rgb(244, 245, 247);\n  display: flex;\n  flex-direction: column;\n  padding: 0.7rem 0.7rem 1rem;\n  margin-right: 1.5rem;\n`;\nconst TaskContainer = styled.div`\n  overflow: scroll;\n  flex: 1;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import { Input } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useAddKanban } from \"utils/kanban\";\nimport { Container } from \"./kanban-column\";\nimport { useKanbansQueryKey, useProjectIdInUrl } from \"./util\";\n\nexport const CreateKanban = () => {\n  const [name, setName] = useState(\"\");\n  const projectId = useProjectIdInUrl();\n  const { mutateAsync: addKanban } = useAddKanban(useKanbansQueryKey());\n\n  const submit = async () => {\n    await addKanban({ name, projectId });\n    setName(\"\");\n  };\n\n  return (\n    <Container>\n      <Input\n        size={\"large\"}\n        placeholder={\"新建看板名称\"}\n        onPressEnter={submit}\n        value={name}\n        onChange={(evt) => setName(evt.target.value)}\n      />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useTaskTypes } from \"utils/task-type\";\nimport { IdSelect } from \"./id-select\";\n\nexport const TaskTypeSelect = (\n  props: React.ComponentProps<typeof IdSelect>\n) => {\n  const { data: taskTypes } = useTaskTypes();\n  return <IdSelect options={taskTypes || []} {...props} />;\n};\n","import { Button, Input } from \"antd\";\nimport { Row } from \"components/lib\";\nimport { TaskTypeSelect } from \"components/task-type-select\";\nimport { UserSelect } from \"components/user-select\";\nimport React from \"react\";\nimport { useSetUrlSearchParam, useUrlQueryParam } from \"utils/url\";\nimport { useTasksSearchParams } from \"./util\";\n\nexport const SearchPanel = () => {\n  const searchParams = useTasksSearchParams();\n  const setSearchParams = useSetUrlSearchParam();\n  const reset = () => {\n    setSearchParams({\n      typeId: undefined,\n      processorId: undefined,\n      tagId: undefined,\n      name: undefined,\n    });\n  };\n  //请求发出的变成根据debouncedName来管理\n  //input里如果用他debounced的value显示太慢了,所以要单独去拿name\n  const [{ name }] = useUrlQueryParam([\"name\"]);\n\n  //这样就实现了input改变,url的name就改变,但是请求根据debounced的name,所以不会发很多请求\n\n  return (\n    <Row marginBottom={4} gap={true}>\n      <Input\n        style={{ width: \"20rem\" }}\n        placeholder={\"任务名\"}\n        value={name}\n        onChange={(evt) => setSearchParams({ name: evt.target.value })}\n      />\n      <UserSelect\n        defaultOptionName={\"经办人\"}\n        value={searchParams.processorId}\n        onChange={(value) => setSearchParams({ processorId: value })}\n      />\n      <TaskTypeSelect\n        defaultOptionName={\"类型\"}\n        value={searchParams.typeId}\n        onChange={(value) => setSearchParams({ typeId: value })}\n      />\n      <Button onClick={reset}>清除筛选器</Button>\n    </Row>\n  );\n};\n","import { Button, Form, Input, Modal } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { TaskTypeSelect } from \"components/task-type-select\";\nimport { UserSelect } from \"components/user-select\";\nimport React, { useEffect } from \"react\";\nimport { useDeleteTask, useEditTask } from \"utils/task\";\nimport { useTaskModel, useTasksQueryKey } from \"./util\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nexport const TaskModal = () => {\n  const [form] = useForm();\n  const { editingTaskId, editingTask, close } = useTaskModel();\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\n    useTasksQueryKey()\n  );\n  const { mutateAsync: deleteTask } = useDeleteTask(useTasksQueryKey());\n\n  const onCancle = () => {\n    close();\n    form.resetFields();\n  };\n\n  const onOk = async () => {\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\n    close();\n  };\n\n  const startDelete = () => {\n    close();\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      title: \"确定删除看板吗\",\n      onOk() {\n        return deleteTask({ id: Number(editingTaskId) });\n      },\n    });\n  };\n\n  useEffect(() => {\n    form.setFieldsValue(editingTask);\n  }, [form, editingTask]);\n\n  return (\n    <Modal\n      forceRender={true}\n      onCancel={onCancle}\n      onOk={onOk}\n      okText={\"确认\"}\n      cancelText={\"取消\"}\n      confirmLoading={editLoading}\n      title={\"编辑任务\"}\n      visible={!!editingTaskId}\n    >\n      <Form {...layout} initialValues={editingTask} form={form}>\n        <Form.Item\n          label={\"任务名\"}\n          name={\"name\"}\n          rules={[{ required: true, message: \"请输入任务名\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label={\"经办人\"} name={\"processorId\"}>\n          <UserSelect defaultOptionName={\"经办人\"} />\n        </Form.Item>\n        <Form.Item label={\"类型\"} name={\"typeId\"}>\n          <TaskTypeSelect />\n        </Form.Item>\n      </Form>\n      <div style={{ textAlign: \"right\" }}>\n        <Button style={{ fontSize: \"14px\" }} size=\"small\" onClick={startDelete}>\n          删除\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Spin } from \"antd\";\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\nimport { ScreenContainer } from \"components/lib\";\nimport React, { useCallback } from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport {\n  useKanbanSearchParams,\n  useKanbansQueryKey,\n  useProjectInUrl,\n  useTasksQueryKey,\n  useTasksSearchParams,\n} from \"screens/kanban/util\";\nimport { useDocumentTitle } from \"utils\";\nimport { useKanbans, useReorderKanban } from \"utils/kanban\";\nimport { useReorderTask } from \"utils/task\";\nimport { useTasks } from \"utils/tasks\";\nimport { CreateKanban } from \"./create-kanban\";\nimport { KanbanColumn } from \"./kanban-column\";\nimport { SearchPanel } from \"./search-panel\";\nimport { TaskModal } from \"./task-model\";\n\nexport const KanbanScreen = () => {\n  useDocumentTitle(\"看板列表\");\n\n  const { data: currentProject } = useProjectInUrl();\n  const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(\n    useKanbanSearchParams()\n  );\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\n  const isLoading = taskIsLoading || kanbanIsLoading;\n\n  const onDragEnd = useDragEnd();\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <ScreenContainer>\n        <h1>{currentProject?.name}看板</h1>\n        {/* \n    看板内的Tasks要由SearchPanel决定\n    而searchpanel控制url里querystring\n    所以task请求要根据queryString里各个参数进行请求\n    */}\n        <SearchPanel />\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <ColumnsContainer>\n            <Drop\n              type={\"COLUMN\"}\n              direction={\"horizontal\"}\n              droppableId={\"kanban\"}\n            >\n              <DropChild style={{ display: \"flex\" }}>\n                {kanbans?.map((kanban, index) => (\n                  <Drag\n                    key={kanban.id}\n                    draggableId={\"kanban\" + kanban.id}\n                    index={index}\n                  >\n                    <KanbanColumn kanban={kanban} key={kanban.id} />\n                  </Drag>\n                ))}\n              </DropChild>\n            </Drop>\n            <CreateKanban />\n          </ColumnsContainer>\n        )}\n        <TaskModal />\n      </ScreenContainer>\n    </DragDropContext>\n  );\n};\n\nexport const useDragEnd = () => {\n  const { data: kanbans } = useKanbans(useKanbanSearchParams());\n  const { mutate: reorderKanban } = useReorderKanban(useKanbansQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n      //看板排序\n      if (type === \"COLUMN\") {\n        const fromId = kanbans?.[source.index].id;\n        const toId = kanbans?.[destination.index].id;\n        if (!fromId || !toId || fromId === toId) return;\n        const type = destination.index > source.index ? \"after\" : \"before\";\n        reorderKanban({ fromId, referenceId: toId, type });\n      }\n      //task排序\n      else if (type === \"ROW\") {\n        const fromKanbanId = +source.droppableId;\n        const toKanbanId = +destination.droppableId;\n        //跨看板排序\n        if (fromKanbanId === toKanbanId) {\n          return;\n        }\n        const fromTask = allTasks?.filter(\n          (task) => task.kanbanId === fromKanbanId\n        )[source.index];\n        // 后台应该处理了,toTask=undefined则push到kanban最后\n        //空的时候index=0   放到最后index=length 都会让toTask = undefined\n        const toTask = allTasks?.filter((task) => task.kanbanId === toKanbanId)[\n          destination.index\n        ];\n\n        if (fromTask?.id === toTask?.id) {\n          return;\n        }\n        reorderTask({\n          fromId: fromTask?.id,\n          //注意toTask可能undefined不加?会报typeError 从undefined读取id\n          referenceId: toTask?.id,\n          fromKanbanId,\n          toKanbanId,\n          type:\n            fromKanbanId === toKanbanId && destination.index > source.index\n              ? \"after\"\n              : \"before\",\n        });\n      }\n    },\n    [kanbans, reorderKanban, allTasks, reorderTask]\n  );\n};\n\nexport const ColumnsContainer = styled(\"div\")`\n  display: flex;\n  overflow-x: auto;\n  //他用了scroll我感觉auto好一点\n  /* overflow-x: scroll; */\n  flex: 1;\n`;\n","import styled from \"@emotion/styled\";\nimport { Menu } from \"antd\";\nimport React from \"react\";\nimport { Link, Route, Routes, Navigate, useLocation } from \"react-router-dom\";\nimport { EpicScreen } from \"screens/epic\";\nimport { KanbanScreen } from \"screens/kanban\";\n\nconst useRouteType = () => {\n  const units = useLocation().pathname.split(\"/\");\n  return units[units.length - 1];\n};\n\nexport const ProjectScreen = () => {\n  const routeType = useRouteType();\n  return (\n    <Container>\n      <Aside>\n        <Menu mode=\"inline\" selectedKeys={[routeType]}>\n          <Menu.Item key=\"kanban\">\n            <Link to=\"kanban\">看板</Link>\n          </Menu.Item>\n          <Menu.Item key=\"epic\">\n            <Link to=\"epic\">任务组</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>\n        <Routes>\n          <Route path=\"kanban\" element={<KanbanScreen />} />\n          <Route path=\"epic\" element={<EpicScreen />} />\n          {/* 实现刚打开就显示看板 projects/id跟上面都不匹配 */}\n          {/* <Navigate to={window.location.pathname + \"/kanban\"} /> */}\n          <Navigate to={\"kanban\"} replace={true} />\n        </Routes>\n      </Main>\n    </Container>\n  );\n};\n//['projects','projects/6','projects/6/kanban'] 往后退会去6,又变回6/kanban导致失效\n//replace就会变成['projects','projects/6/kanban']\nconst Aside = styled.aside`\n  background-color: rgb(244, 245, 247);\n  /* 让儿子的辅轴也就是高度等于这个父亲Aside的高度,也就是让下面的Menu能高度占满了 */\n  /* 这个Aside是grid设置的,所以他是占满高度的 */\n  display: flex;\n`;\n\nconst Main = styled.div`\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Container = styled.div`\n  display: grid;\n  //左边16rem 右边看着办\n  grid-template-columns: 16rem 1fr;\n  width: 100%;\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  x1: \"97.6553341%\",\n  y1: \"35.6591143%\",\n  x2: \"37.202032%\",\n  y2: \"75.4891864%\",\n  id: \"uid392-1\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#0052CC\",\n  offset: \"7%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#2684FF\",\n  offset: \"100%\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  x1: \"8.43371138%\",\n  y1: \"60.1495759%\",\n  x2: \"64.1161517%\",\n  y2: \"23.5790285%\",\n  id: \"uid392-2\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#0052CC\",\n  offset: \"0%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#2684FF\",\n  offset: \"100%\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"none\",\n  strokeWidth: 1,\n  fillRule: \"nonzero\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n  fill: \"currentColor\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n  fill: \"currentColor\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n  fill: \"url(#uid392-1)\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n  fill: \"url(#uid392-2)\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n  fill: \"inherit\",\n  fillRule: \"evenodd\"\n}));\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.ec204298.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"@emotion/styled\";\nimport { Button, Drawer, Input, Spin, Form } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { ErrorBox } from \"components/lib\";\nimport { UserSelect } from \"components/user-select\";\nimport React, { useEffect } from \"react\";\nimport { useAddProject, useEditProject } from \"utils/project\";\nimport { useProjectModal, useProjectsQueryKey } from \"./util\";\n\nexport const ProjectModal = () => {\n  //用这个hook管理modal开关行为与状态\n  const {\n    projectModalOpen,\n    close,\n    editingProject,\n    isLoading,\n  } = useProjectModal();\n  //antd提供的form的ref\n  const [form] = useForm();\n\n  //根据editingProject判断是增加project还是修改  ,运行返回对应的useMutation的返回值\n  const useMutateProject = editingProject ? useEditProject : useAddProject;\n  //获得react-query包装后对应的请求方式\n  const { mutateAsync, error, isLoading: mutateLoading } = useMutateProject(\n    useProjectsQueryKey()\n  );\n  const onFinish = (values: any) => {\n    mutateAsync({ ...editingProject, ...values }).then(() => {\n      form.resetFields();\n      close();\n    });\n  };\n\n  const closeModal = () => {\n    form.resetFields();\n    close();\n  };\n\n  const title = editingProject ? \"编辑项目\" : \"创建项目\";\n\n  //别忘了useEffect在react commit阶段后异步调用\n  //为了编辑的时候能提前填好\n  useEffect(() => {\n    form.setFieldsValue(editingProject);\n  }, [editingProject, form]);\n\n  return (\n    //不管是否隐藏都渲染执行一次\n    <Drawer\n      forceRender={true}\n      onClose={closeModal}\n      visible={projectModalOpen}\n      width={\"100%\"}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <>\n            <h1>{title}</h1>\n            <ErrorBox error={error} />\n            <Form\n              form={form}\n              layout={\"vertical\"}\n              style={{ width: \"40rem\" }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={\"名称\"}\n                name={\"name\"}\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入项目名称\",\n                  },\n                ]}\n              >\n                <Input placeholder={\"请输入项目名称\"} />\n              </Form.Item>\n\n              <Form.Item\n                label={\"部门\"}\n                name={\"organization\"}\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入部门名\",\n                  },\n                ]}\n              >\n                <Input placeholder={\"请输入部门名\"} />\n              </Form.Item>\n\n              <Form.Item label={\"负责人\"} name={\"personId\"}>\n                <UserSelect defaultOptionName={\"负责人\"} />\n              </Form.Item>\n\n              <Form.Item style={{ textAlign: \"right\" }}>\n                <Button\n                  loading={mutateLoading}\n                  type={\"primary\"}\n                  htmlType={\"submit\"}\n                >\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n        {/* <Button onClick={close}>关闭</Button> */}\n      </Container>\n    </Drawer>\n  );\n};\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from \"@emotion/styled\";\nimport { Divider, List, Popover, Typography } from \"antd\";\nimport React from \"react\";\nimport { useProjectModal } from \"screens/project-list/util\";\nimport { useProjects } from \"utils/project\";\nimport { ButtonNoPadding } from \"./lib\";\n\nexport const ProjectPopover = () => {\n  const { data: projects, refetch } = useProjects();\n  const pinnedProjects = projects?.filter((project) => project.pin);\n  const { open } = useProjectModal();\n\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\n      <List>\n        {pinnedProjects?.map((project) => (\n          <List.Item key={project.id}>\n            <List.Item.Meta title={project.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n      <ButtonNoPadding onClick={open} type={\"link\"}>\n        创建项目\n      </ButtonNoPadding>\n    </ContentContainer>\n  );\n  return (\n    <Popover\n      destroyTooltipOnHide\n      onVisibleChange={() => refetch()}\n      placement={\"bottom\"}\n      content={content}\n    >\n      <span>项目</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { Divider, List, Popover, Spin, Typography } from \"antd\";\nimport React from \"react\";\nimport { useUsers } from \"utils/user\";\n\nexport const UserPopover = () => {\n  const { data: users, refetch } = useUsers();\n\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>组员列表</Typography.Text>\n      <List>\n        {users?.map((user) => (\n          <List.Item key={user.id}>\n            <List.Item.Meta title={user.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n    </ContentContainer>\n  );\n  return (\n    <Popover\n      destroyTooltipOnHide\n      onVisibleChange={() => refetch()}\n      placement={\"bottom\"}\n      content={content}\n    >\n      <span>组员</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { ButtonNoPadding, Row } from \"components/lib\";\nimport { useAuth } from \"context/auth-context\";\nimport ProjectListScreen from \"./screens/project-list\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ProjectScreen } from \"screens/project\";\nimport { ReactComponent as SoftwareLogo } from \"assets/software-logo.svg\";\nimport { Button, Dropdown } from \"antd\";\nimport Menu from \"antd/lib/menu\";\nimport { resetRoute } from \"utils\";\nimport { ProjectModal } from \"screens/project-list/project-modal\";\nimport { ProjectPopover } from \"components/project-popover\";\nimport React from \"react\";\nimport { UserPopover } from \"components/user-popover\";\n// import softwareLogo from 'assets/software-logo.svg'\n\nexport const AuthenticatedApp = () => {\n  return (\n    <Container>\n      <BrowserRouter>\n        <PageHeader />\n        <Main>\n          <Routes>\n            <Route path=\"/projects\" element={<ProjectListScreen />}></Route>\n            <Route\n              path=\"/projects/:projectId/*\"\n              element={<ProjectScreen />}\n            ></Route>\n            <Navigate to=\"/projects\" />\n          </Routes>\n        </Main>\n\n        <ProjectModal />\n      </BrowserRouter>\n    </Container>\n  );\n};\n\nconst PageHeader = () => {\n  return (\n    <Header between={true}>\n      <HeaderLeft gap={true}>\n        <Button style={{ padding: 0 }} type=\"link\" onClick={resetRoute}>\n          {/* <img src={softwareLogo} /> 这样是img的形式我们希望svg形式渲染,就可以自定义样式 */}\n          <SoftwareLogo width={\"18rem\"} color={\"rgb(38,132,255\"} />\n        </Button>\n        <ProjectPopover />\n        <UserPopover />\n      </HeaderLeft>\n      <HeaderRight>\n        <User />\n      </HeaderRight>\n    </Header>\n  );\n};\n\nconst User = () => {\n  const { logout, user } = useAuth();\n\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item key=\"logout\">\n            <ButtonNoPadding type=\"link\" onClick={logout}>\n              登出\n            </ButtonNoPadding>\n            {/* <a onClick={logout}>登出</a> */}\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <Button type=\"link\" onClick={(e) => e.preventDefault()}>\n        Hi, {user?.name}\n      </Button>\n    </Dropdown>\n  );\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 6rem calc(100vh - 6rem);\n`;\nconst Header = styled(Row)`\n  padding: 3.2rem;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n  z-index: 1;\n`;\nconst Main = styled.main`\n  //这是为了儿子的高度(辅轴)能跟这个Main一样,也就是撑满\n  //这个Main是满的,是因为父亲Container用grid划分的\n  display: flex;\n  overflow: hidden;\n`;\n\nconst HeaderLeft = styled(Row)``;\nconst HeaderRight = styled(Row)``;\n","import { useAuth } from \"context/auth-context\";\nimport React from \"react\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport { LongButton } from \"unauthenticated-app\";\nimport { useAsync } from \"utils/use-async\";\n\nconst LoginScreen = ({ onError }: { onError: (error: Error) => void }) => {\n  const { login } = useAuth();\n\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n\n  const handleSubmit = async (values: {\n    username: string;\n    password: string;\n  }) => {\n    try {\n      //用try catch的话 因为login是异步的所以必须await\n      //密码直接明文发了安全性有问题 可以和后端协调一下用SHA256加密一下\n      await run(login(values));\n    } catch (e) {\n      onError(e);\n    }\n  };\n\n  return (\n    <Form onFinish={handleSubmit}>\n      {/* 这个name是antd用来推断给handleSubmit传的对象的属性名 */}\n      <Form.Item\n        name=\"username\"\n        rules={[{ required: true, message: \"请输入用户名\" }]}\n      >\n        <Input placeholder=\"用户名\" type=\"text\" id=\"username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: \"请输入密码\" }]}\n      >\n        <Input placeholder=\"密码\" type=\"password\" id=\"password\" />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType={\"submit\"} type={\"primary\"}>\n          登录\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default LoginScreen;\n","import { useAuth } from \"context/auth-context\";\nimport React, { FormEvent } from \"react\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport { LongButton } from \"unauthenticated-app\";\nimport { useAsync } from \"utils/use-async\";\n\nconst RegisterScreen = ({ onError }: { onError: (error: Error) => void }) => {\n  const { register, user } = useAuth();\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n\n  const handleSubmit = ({\n    cpassword,\n    ...values\n  }: {\n    username: string;\n    password: string;\n    cpassword: string;\n  }) => {\n    if (cpassword !== values.password) {\n      onError(new Error(\"请确认两次输入的密码相同\"));\n    } else {\n      run(register(values)).catch(onError);\n    }\n  };\n  return (\n    <Form onFinish={handleSubmit}>\n      {/* 这个name是antd用来推断给handleSubmit传的对象的属性名 */}\n      <Form.Item\n        name=\"username\"\n        rules={[{ required: true, message: \"请输入用户名\" }]}\n      >\n        <Input placeholder=\"用户名\" type=\"text\" id=\"username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: \"请输入密码\" }]}\n      >\n        <Input placeholder=\"密码\" type=\"password\" id=\"password\" />\n      </Form.Item>\n      <Form.Item\n        name=\"cpassword\"\n        rules={[{ required: true, message: \"请确认密码\" }]}\n      >\n        <Input placeholder=\"确认密码\" type=\"password\" id=\"cpassword\" />\n      </Form.Item>\n      <Form.Item>\n        <LongButton htmlType=\"submit\" type=\"primary\">\n          注册\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RegisterScreen;\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import Button from \"antd/lib/button\";\nimport Card from \"antd/lib/card\";\nimport Divider from \"antd/lib/divider\";\nimport React, { useState } from \"react\";\nimport LoginScreen from \"./login\";\nimport RegisterScreen from \"./register\";\nimport styled from \"@emotion/styled\";\nimport logo from \"assets/logo.svg\";\nimport left from \"assets/left.svg\";\nimport right from \"assets/right.svg\";\nimport { useDocumentTitle } from \"utils\";\nimport { ErrorBox } from \"components/lib\";\n\nexport const UnauthenticatedApp = () => {\n  const [isRegister, setIsRegister] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  useDocumentTitle(\"请登录注册以继续\");\n\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? \"请注册\" : \"请登录\"}</Title>\n        <ErrorBox error={error} />\n        {isRegister ? (\n          <RegisterScreen onError={setError} />\n        ) : (\n          <LoginScreen onError={setError} />\n        )}\n        <Divider />\n        <Button type=\"link\" onClick={() => setIsRegister(!isRegister)}>\n          {isRegister ? \"已经有账号了?直接登录\" : \"没有账号?注册新账号\"}\n        </Button>\n      </ShadowCard>\n    </Container>\n  );\n};\n\nexport const LongButton = styled(Button)`\n  width: 100%;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\n    calc(((100vw - 40rem) / 2) - 3.2rem);\n  background-image: url(${left}), url(${right});\n`;\n\nconst Header = styled.header`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`;\n\n//对于不是html的标签，这种组件要加()\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`;\n","import React, { ReactNode } from \"react\";\n\n//ReactElement就是jsx通过React.createElement创建出来的值,所以babel编译前我们写的就是jsx\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\n\n//其实有个库react-error-boundary可以直接用\n//React.PropsWithChildren相当于{children:ReactNode}\nexport class ErrorBoundary extends React.Component<\n  React.PropsWithChildren<{ fallbackRender: FallbackRender }>,\n  { error: Error | null }\n> {\n  state = {\n    error: null,\n  };\n\n  //当子组件抛出异常,这里会接受到并且调用\n  //返回值会作为新state\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n    const { fallbackRender, children } = this.props;\n    if (error) {\n      return fallbackRender({ error });\n    } else {\n      return children;\n    }\n  }\n}\n","import { AuthenticatedApp } from \"authenticated-app\";\nimport { useAuth } from \"context/auth-context\";\nimport React from \"react\";\n\nimport \"./App.css\";\n\nimport { UnauthenticatedApp } from \"unauthenticated-app\";\nimport { ErrorBoundary } from \"components/error-boundary\";\nimport { FullPageErrorFallback } from \"components/lib\";\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n        {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { ReactNode } from \"react\";\nimport { AuthProvider } from \"./auth-context\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n  /*两种写法相同 所以要给最里层Provider的props里加入children\n   */\n  // return <AuthProvider children={children}  />\n  return (\n    //react-query要client这个context来做缓存的\n    <QueryClientProvider client={new QueryClient()}>\n      <AuthProvider>{children}</AuthProvider>\n    </QueryClientProvider>\n  );\n};\n","import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DevTools, loadServer } from \"jira-dev-tool\";\n//必须写在jira-dev-tool后面引入,因为他也用到了antd,不然的话我们自定义主题没用\nimport \"antd/dist/antd.less\";\nimport { AppProviders } from \"context\";\n\nloadServer(() =>\n  ReactDOM.render(\n    <React.StrictMode>\n      {/* 注意了AppProviders是我们自己写的函数组件,App作为他的children必须要在他里面手动渲染children */}\n      <AppProviders>\n        <DevTools />\n        <App />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n);\n"],"sourceRoot":""}